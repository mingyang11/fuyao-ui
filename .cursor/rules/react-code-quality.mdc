---
description: 
globs: 
alwaysApply: false
---
# React代码质量与最佳实践

## TypeScript规范
- 使用Interface定义组件Props
- 为所有函数和变量提供类型注解
- 尽量避免使用any类型
- 使用联合类型和泛型提高代码复用性

## 组件设计原则
- 遵循单一职责原则，一个组件只做一件事
- 组件应该是可组合的和可重用的
- 使用受控组件管理表单元素
- 复杂组件应拆分为多个小组件

## React Hooks使用指南
- 使用useState管理本地状态
- 使用useEffect处理副作用
- 使用useCallback和useMemo优化性能
- 使用自定义Hooks抽象共享逻辑

## 性能优化
- 避免不必要的渲染
- 合理使用React.memo优化函数组件
- 使用React.lazy和Suspense实现代码分割
- 减少不必要的DOM操作
<!-- 
## 测试策略
- 编写单元测试验证组件行为
- 测试用户交互和事件处理
- 确保边界条件和错误处理被测试 -->

## 样式管理
- 使用模块化CSS或less
- 样式命名遵循BEM或其他统一规范
- 使用变量管理主题和设计令牌
